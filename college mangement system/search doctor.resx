<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>